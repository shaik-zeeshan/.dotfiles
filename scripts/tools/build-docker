#!/bin/bash

# Function to check if Docker is installed
check_docker() {
    if ! command -v docker &> /dev/null
    then
        echo "Docker is not installed. Please install Docker and try again."
        exit 1
    fi
}

# Function to create Dockerfile with optimized caching
create_dockerfile() {
    cat << EOF > Dockerfile
FROM ubuntu:latest
WORKDIR /app

# Update and install common packages
RUN apt-get update && \
    apt-get install -y software-properties-common curl git build-essential neovim && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Add Ansible repository and install Ansible
RUN add-apt-repository --yes --update ppa:ansible/ansible && \
    apt-get update && \
    apt-get install -y ansible && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy the application files
COPY . .

CMD ["bash"]
EOF
}

# Function to build Docker image with caching
build_image() {
    local image_name="$1"
    docker build --build-arg CACHEBUST=$(date +%s) -t "$image_name" .
}

# Main script
main() {
    check_docker

    # Get the current directory name
    dir_name=$(basename "$(pwd)")
    image_name="container-${dir_name}"

    echo "Creating Dockerfile..."
    create_dockerfile

    echo "Building Docker image: $image_name"
    build_image "$image_name"

    echo "Cleaning up..."
    rm Dockerfile

    echo "Docker image '$image_name' has been created successfully."
    echo "To run the container, use: docker run -it $image_name"
}

# Run the main function
main
